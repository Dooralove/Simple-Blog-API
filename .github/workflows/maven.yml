# Имя рабочего процесса (отображается на вкладке Actions в GitHub)
name: Build Spring Boot App

# Триггер рабочего процесса
# Этот рабочий процесс будет запускаться при каждой отправке (push) в ветку main
on:
  push:
    branches:
      - main # Укажите имя ветки, которую вы используете для основного кода (master или main)

# Задачи (Jobs)
jobs:
  build: # Имя задачи сборки
    # Указываем, на какой операционной системе будет выполняться задача
    runs-on: ubuntu-latest # Используем последний образ Ubuntu

    # Шаги (Steps) выполнения задачи
    steps:
      # Шаг: Извлечение исходного кода из репозитория
      # Action actions/checkout@v4 получает ваш код из репозитория GitHub
      - name: Checkout Code
        uses: actions/checkout@v4

      # Шаг: Настройка среды Java Development Kit (JDK)
      # Action actions/setup-java@v4 устанавливает указанную версию JDK
      # Мы используем OpenJDK 17, как в вашем Dockerfile
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17' # Указываем версию Java
          distribution: 'temurin' # Рекомендуемая дистрибуция OpenJDK
          cache: maven # Включаем кэширование зависимостей Maven для ускорения последующих сборок


      # Опциональный шаг: Если вы хотите сохранить собранный JAR как артефакт GitHub Actions
      # Это полезно для отладки или если вы хотите вручную скачать собранный файл.
      # Для автоматического деплоя на Railway это НЕ требуется, т.к. Railway собирает сам.
      # - name: Upload Build Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: simple-blog-api-jar
      #     path: target/*.jar # Убедитесь, что путь и маска соответствуют имени вашего JAR

      # Шаг: Завершение CI.
      # Если предыдущий шаг (Build with Maven) прошел успешно (код компилируется, тесты проходят),
      # GitHub Actions считает этот коммит "зеленым".
      # Railway, настроенный на деплой из Git, увидит этот новый коммит
      # в ветке main и запустит СВОЙ процесс сборки (используя Dockerfile) и деплоя.
      # Эксплицитного шага "deploy to Railway" здесь нет, т.к. деплой триггерится Railway по коммиту.